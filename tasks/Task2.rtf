{\rtf1\ansi\ansicpg1252\cocoartf2580
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fswiss\fcharset0 Helvetica;\f1\fmodern\fcharset0 Courier;}
{\colortbl;\red255\green255\blue255;\red0\green0\blue0;}
{\*\expandedcolortbl;;\cssrgb\c0\c0\c0;}
\paperw11900\paperh16840\margl1440\margr1440\vieww37900\viewh21300\viewkind0
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0

\f0\fs24 \cf0 CREATE\
Check a new post creation flow\
Test case #1\
Summary: \
	Create new post when valid title, body and user id is entered. \
Test Data: \
	\{\
		title: \'93foo\'94,\
		body: \'93bar\'94\
		userId: 1\
	 \}\
Steps:                     									\
	1) Prepare request body\
	2) Call POST JsonPlaceholder API to create new post\
	3) Verify response status code\
	4) Verify response body\
	5) Verify new post in the database\
Expected Result\
	1) The response should return status code - 201 - created.\
	2) The response body should contain new post data.\
		\{\
			title: \'93foo\'94,\
			body: \'93bar\'94,\
			userId: 1,\
			postId: 101\
		\}\
	3) The database should contain new post data.\
\
Test case #2\
Summary: \
	Create new post when valid title, body and invalid user id is entered: \
Test Data: \
	\{\
		title: \'93foo\'94,\
		body: \'93bar\'94\
		userId: \'93invalid data\'94\
	 \}\
\
Steps:                     									\
	1) Prepare request body\
	2) Call POST JsonPlaceholder API to create new post\
	3) Verify response status code\
	4) Verify response body\
	5) Verify new post in the database\
Expected Result\
	The response should return status code - 400 - bad request.\
	The response body should contain empty object.\
	The database should not contain new post data.\
\
\
\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\
UPDATE\
Check an existing post updating flow\
Test case #1\
Summary: \
	Update existing post when valid title, body, user id and post id is entered. \
Test Data: \
	Post Id: 1\
	\{\
		title: \'93foo\'94,\
		body: \'93bar\'94\
		userId: 1\
	 \}\
Steps:                     									\
	1) Prepare request body\
	2) Call PUT JsonPlaceholder API to update existing post\
	3) Verify response status code\
	4) Verify response body\
	5) Verify new post in the database\
Expected Result\
	1) The response should return status code - 200 - OK.\
	2) The response body should contain updated post data.\
		\{\
			title: \'93foo\'94,\
			body: \'93bar\'94,\
			userId: 1,\
			postId: 1\
		\}\
	3) The database should contain updated post data.\
\
Test case #2\
Summary: \
	Update existing post when valid title, body, user id and invalid post id is entered. \
Test Data: \
	Post Id: 0\
	\{\
		title: \'93foo\'94,\
		body: \'93bar\'94\
		userId: 1\
	 \}\
\
Steps:                     									\
	1) Prepare request body\
	2) Call PUT JsonPlaceholder API to update existing post\
	3) Verify response status code\
	4) Verify response body\
	5) Verify new post in the database\
Expected Result\
	The response should return status code - 404 - not found.\
	The response body should contain empty object.\
	The database should not contain updated post data.\
\
Test case #3\
Summary: \
	Update existing post when valid title, body, id and invalid user id is entered. \
Test Data: \
	Post Id: 1\
	\{\
		title: \'93foo\'94,\
		body: \'93bar\'94\
		userId: \'93invalid data\'94\
	 \}\
\
Steps:                     									\
	1) Prepare request body\
	2) Call POST JsonPlaceholder API to create new post\
	3) Verify response status code\
	4) Verify response body\
	5) Verify new post in the database\
Expected Result\
	The response should return status code - 400 - bad request.\
	The response body should contain empty object.\
	The database should not contain updated post data.\
\
\
\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\
DELETE\
Check an existing post deletion flow\
Test case #1\
Summary: \
	Delete existing post when valid post id is entered. \
Test Data: \
	Post Id: 1\
Steps:                     									\
	1) Prepare request body\
	2) Call DELETE JsonPlaceholder API to delete existing post\
	3) Verify response status code\
	4) Verify response body\
	5) Verify new post in the database\
Expected Result\
	1) The response should return status code - 200 - OK.\
	2) The response body should contain deleted post data.\
	3) The database should not contain deleted post data.\
\
Test case #2\
Summary: \
	Delete existing post when invalid post id is entered. \
Test Data: \
	Post Id: 0\
Steps:                     									\
	1) Prepare request body\
	2) Call DELETE JsonPlaceholder API to delete existing post\
	3) Verify response status code\
	4) Verify response body\
	5) Verify new post in the database\
Expected Result\
	1) The response should return status code - 404 - not found.\
	2) The response body should contain empty object.\
		
\f1 \cf2 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 \{\
\pard\pardeftab720\partightenfactor0

\f0 \cf2   		"userId": 1,\
  		"id": 1,\
  		"title": "sunt aut facere repellat provident occaecati excepturi optio reprehenderit",\
  		"body": "quia et suscipit\\nsuscipit recusandae consequuntur expedita et cum\\nreprehenderit molestiae ut ut quas totam\\nnostrum rerum est autem sunt rem eveniet architecto"
\f1 \
    	   \}
\f0 \cf0 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 \
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0
\cf0 	3) The database should not contain deleted post data.\
\
}